extends ../template

block content
  script(src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js")
  script(src='/scripts/examen.js', defer)
  section.section#examen
    .container
      h1.title.has-text-centered-mobile= examen.title
        small.is-size-6.has-text-grey-light.is-pulled-right.date(title=moment(examen.dateAdded).format("dddd, MMMM Do YYYY, h:mm a")) Posted #{moment(examen.dateAdded).fromNow()}

      hr
      .examen-controls.columns
        audio.examen-audio.is-marginless#backing-track(controls, loop, src="/audio/examens/" + examen.id + "/backing_track.mp3", volume="0.1", type="audio/mpeg")
        .column.is-one-quarter.has-text-centered-mobile
          button.button.is-primary(@click="playFromStart", :class="playing ? 'is-outlined' : ''")
            i.fas.fa-volume-up &nbsp;
            |  {{ playing ? 'Stop' : 'From Start' }}
          span.tag.is-info.is-medium {{ statusText }}
          button.button(@click="prevPrompt", :disabled="!hasPrevPrompt")
            i.fas.fa-arrow-left
          button.button(@click="nextPrompt", :disabled="!hasNextPrompt")
            i.fas.fa-arrow-right
        .column
          progress.progress(:max="currentDelay", :value="timer") 15%
      hr(style="margin-top: 0px;")
 
      .prompts
        #introduction.content(v-if="status == 'introduction'")
          | !{examen.introduction}
          hr
          b.is-size-4.has-text-centered (Pause for 10 seconds...)
        for p, index in examen.prompts
          .content.prompt-content(id="prompt-" + index, v-show="status === " + index)
            audio.examen-audio.prompt-recording.is-marginless(controls, preload="auto", data-delay=p.delay, data-prompt=index, id="prompt-" + index + "-audio", src="/audio/examens/" + examen.id + "/prompt-" + index + ".mp3", type="audio/mpeg")
            a.play-prompt(data-prompt=index, @click="playPrompt(" + index + ")") Listen
              i.fas.fa-volume-up
            | !{p.text}
            hr
            b.is-size-4.has-text-centered (Pause for #{p.delay} seconds...)